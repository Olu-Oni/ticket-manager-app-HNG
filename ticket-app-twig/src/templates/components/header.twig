<header class="bg-white shadow-md">
    <div class="mx-auto px-6 py-2.5 flex justify-between items-center">
        <!-- Logo + Page Title -->
        <div class="flex max-md:grow md:flex-col items-center gap-x-4">
            <h2 class="text-xl font-bold">TicketsPlease</h2>
            <h4 class="border-b-2 text-xs rounded-2xl px-3 py-0.5 mt-0.5 max-md:mx-auto" id="page-title">
                {{ page }}
            </h4>
        </div>

        <!-- Hamburger Button (Mobile) -->
        <button id="toggleMenu" class="md:hidden focus:outline-none" aria-label="Toggle navigation menu">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" id="menu-icon-path"
                    d="M4 6h16M4 12h16m-7 6h7" />
            </svg>
        </button>

        <!-- Navigation Menu -->
        <nav id="nav-menu" class="md:flex md:flex-row flex-col items-end md:items-center grow gap-4 absolute md:static top-14 right-2 rounded-2xl max-md:border-2 border-[var(--primary-light)] bg-white md:bg-transparent shadow-md md:shadow-none p-4 md:p-0 z-10 max-md:w-fit hidden">
            <span class="flex max-md:flex-col gap-4 grow place-content-center md:ml-20">
                <!-- Dashboard Link -->
                <a href="?route=dashboard" id="dashboard-link" class="block">
                    Dashboard
                </a>

                <!-- Tickets Link -->
                <a href="?route=tickets" id="tickets-link" class="block">
                    Tickets
                </a>
            </span>

            <!-- User Info (Hidden on mobile) -->
            <div class="text-right hidden sm:block max-md:-order-1" id="user-info">
                <p class="text-sm font-medium text-gray-800" id="user-name">
                    {{ user.name or 'User' }}
                </p>
                <p class="text-xs text-gray-500" id="user-email">
                    {{ user.email or '' }}
                </p>
            </div>

            <!-- Logout Button -->
            <button id="logout-btn" class="px-4 py-1.5 bg-red-500 text-white rounded-lg hover:bg-red-600 transition shadow-md flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                </svg>
                <span class="hidden sm:inline">Logout</span>
            </button>
        </nav>
    </div>
</header>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const toggleMenuBtn = document.getElementById('toggleMenu');
        const navMenu = document.getElementById('nav-menu');
        const menuIconPath = document.getElementById('menu-icon-path');
        const dashboardLink = document.getElementById('dashboard-link');
        const ticketsLink = document.getElementById('tickets-link');
        const logoutBtn = document.getElementById('logout-btn');
        const userInfo = document.getElementById('user-info');
        const userName = document.getElementById('user-name');
        const userEmail = document.getElementById('user-email');

        let isMenuOpen = false;

        // Toggle mobile menu
        const toggleMenu = () => {
            isMenuOpen = !isMenuOpen;
            navMenu.classList.toggle('hidden', !isMenuOpen);
            navMenu.classList.toggle('flex', isMenuOpen);
            menuIconPath.setAttribute('d', isMenuOpen ? 'M6 18L18 6M6 6l12 12' : 'M4 6h16M4 12h16m-7 6h7');
        };

        // Close menu on navigation (mobile)
        const closeMenu = () => {
            if (isMenuOpen) {
                isMenuOpen = false;
                navMenu.classList.add('hidden');
                navMenu.classList.remove('flex');
                menuIconPath.setAttribute('d', 'M4 6h16M4 12h16m-7 6h7');
            }
        };

        // Handle logout
        const handleLogout = () => {
            if (window.logout()) {
                new Notyf({ duration: 5000 }).success('Logged out successfully');
                window.location.href = '?route=landing';
            } else {
                new Notyf({ duration: 5000 }).error('Logout canceled or failed');
            }
            closeMenu();
        };

        // Event listeners
        toggleMenuBtn.addEventListener('click', toggleMenu);
        dashboardLink.addEventListener('click', closeMenu);
        ticketsLink.addEventListener('click', closeMenu);
        logoutBtn.addEventListener('click', handleLogout);

        // Update user info if available
        const session = window.getSession();
        if (session && userInfo) {
            const name = session.userName || session.email.split('@')[0];
            userName.textContent = name || 'User';
            userEmail.textContent = session.email || '';
        }
    });
</script>